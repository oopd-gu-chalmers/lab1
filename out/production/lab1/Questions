// Bör ni använda implementationsarv (subclassing) eller specifikationsarv (interfaces)? 
// Varför? Kan båda användas? Vilka för- och nackdelar ser ni?

Jag tror vi huvudsaklingen bör använda implementationsarv (subclassing). Detta kan kombineras med sepcificationsarv (interface)
för ytterligare funktionalitet.

Implementationsarv främjar återanvändning av kod genom att subklasser ärver funkioner från superklassen. 
Det är enklare att förstå och använda. Å andra sidan kan detta bli komplext om hierakin blir för djup. 

Specifikationsarv definierar endast gränssnittet (metoder som måste implementeras) utan att ange den faktiska implementationen. 
Det ger ökad flexibilitet men kan leda till ökad kodupprepning.

// Vilken synlighet bör ni använda för de olika metoder och variabler som klasserna innehåller? Vilket gränssnitt bör ni exponera?
